{
	"id": "80d38dc3e5c4f53474fadf1c8f087344",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"proxy/CellulaGameProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ProxyOwnable.sol\";\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @notice proxy contract of CellulaGame\n///@dev upgrade limit：he new version of the contract can only add data on the basis of the previous version of the contract, \n///                   and the order of declaration must be behind the original data.。\ncontract CellulaGameProxy is Proxy, ProxyOwnable {\n\n    using Address for address;\n\n    /// @dev The address location of the CellulaGame contract is adopted in this way so as not to be overwritten by the data in the proxy contract itself\n\n    bytes32 private constant _IMPLEMENT_ADDRESS_POSITION = keccak256(\"Cellula.Game.impl.address.84c2ce47\");\n\n    /// @dev Where the Owner is actually stored\n\n    bytes32 private constant _OWNER_POSITION = keccak256(\"Cellula.Game.Proxy.owner.7e2efd65\");\n\n    /// @dev Set the address of the implement contract , only called by the owner\n\n    function setImplementAddress(address cellulaGame)public onlyProxyOwner {\n\n        require(cellulaGame.isContract(), \"ADDRESS SHOULD BE CONTRACT\");\n\n        bytes32 position = _IMPLEMENT_ADDRESS_POSITION;\n\n        assembly {\n\n            sstore(position, cellulaGame)\n\n        }\n\n    }\n\n    ///@dev return the address of the implement contract\n\n    function getImplementAddress() public view returns (address) {\n\n        return _implementation();\n\n    }\n\n    /// @dev override:return the address of the implement contract\n\n    function _implementation() internal view virtual override returns (address) {\n\n        bytes32 position = _IMPLEMENT_ADDRESS_POSITION;\n\n        address impl;\n\n        assembly {\n\n            impl := sload(position)\n\n        }\n\n        return impl;\n\n    }\n\n\n    function _storeProxyOwner(address _owner) internal override {\n\n        bytes32 position = _OWNER_POSITION;\n\n        assembly {\n\n            sstore(position, _owner)\n\n        }\n\n    }\n\n\n    function _loadProxyOwner() internal view override returns (address) {\n\n        bytes32 position = _OWNER_POSITION;\n\n        address _owner;\n\n        assembly {\n\n            _owner := sload(position)\n\n        }\n\n        return _owner;\n\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"proxy/ProxyOwnable.sol": {
				"content": "import \"@openzeppelin/contracts/utils/Context.sol\";\n\n/// @dev The proxy contract uses the owner permission management library, and the function name is distinguished from the proxy contract\n\nabstract contract ProxyOwnable is Context {\n\n    event ProxyOwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n\n    * @dev Initializes the contract setting the deployer as the initial owner.\n\n    */\n\n    constructor() {\n\n        _transferProxyOwnership(_msgSender());\n\n    }\n\n    /**\n\n    * @dev Returns the address of the current owner.\n\n    */\n\n    function proxyOwner() public view returns (address) {\n\n        return _loadProxyOwner();\n\n    }\n\n    /**\n\n    * @dev Throws if called by any account other than the owner.\n\n    */\n\n    modifier onlyProxyOwner() {\n\n        require(proxyOwner() == _msgSender(), \"ProxyOwnable: caller is not the owner\");\n\n        _;\n\n    }\n\n    /**\n\n    * @dev Leaves the contract without owner. It will not be possible to call\n\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\n\n    *\n\n    * NOTE: Renouncing ownership will leave the contract without an owner,\n\n    * thereby removing any functionality that is only available to the owner.\n\n    */\n\n    function renounceProxyOwnership() public virtual onlyProxyOwner {\n\n        _transferProxyOwnership(address(0));\n\n    }\n\n    /**\n\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\n\n    * Can only be called by the current owner.\n\n    */\n\n    function transferProxyOwnership(address newOwner) public virtual onlyProxyOwner {\n\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n\n\n\n        _transferProxyOwnership(newOwner);\n\n    }\n\n    /**\n\n    * @dev Transfers ownership of the contract to a new account (`newOwner`).\n\n    * Internal function without access restriction.\n\n    */\n\n    function _transferProxyOwnership(address newOwner) internal virtual {\n\n        address oldOwner = _loadProxyOwner();\n\n        _storeProxyOwner(newOwner);\n\n        emit ProxyOwnershipTransferred(oldOwner, newOwner);\n\n    }\n\n/// @dev store owner\n\n    function _storeProxyOwner(address owner) internal virtual;\n\n    /// @dev read owner\n\n    function _loadProxyOwner() internal view virtual returns (address);\n\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bbfa2f73b755e487d9b12c7a68038c164d0c5c5bc56834ea8560a3d8a0d132ce64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbfa2f73b755e487d9b12c7a68038c164d0c5c5bc56834ea8560a3d8a0d132ce64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB STATICCALL 0x2F PUSH20 0xB755E487D9B12C7A68038C164D0C5C5BC56834EA DUP6 PUSH1 0xA3 0xD8 LOG0 0xD1 ORIGIN 0xCE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:9169:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbfa2f73b755e487d9b12c7a68038c164d0c5c5bc56834ea8560a3d8a0d132ce64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB STATICCALL 0x2F PUSH20 0xB755E487D9B12C7A68038C164D0C5C5BC56834EA DUP6 PUSH1 0xA3 0xD8 LOG0 0xD1 ORIGIN 0xCE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:9169:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbfa2f73b755e487d9b12c7a68038c164d0c5c5bc56834ea8560a3d8a0d132ce64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"proxy/CellulaGameProxy.sol": {
				"CellulaGameProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "ProxyOwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getImplementAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxyOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceProxyOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "cellulaGame",
									"type": "address"
								}
							],
							"name": "setImplementAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferProxyOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "upgrade limit：he new version of the contract can only add data on the basis of the previous version of the contract,                    and the order of declaration must be behind the original data.。",
						"kind": "dev",
						"methods": {
							"getImplementAddress()": {
								"details": "return the address of the implement contract"
							},
							"proxyOwner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceProxyOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setImplementAddress(address)": {
								"details": "Set the address of the implement contract , only called by the owner"
							},
							"transferProxyOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"_IMPLEMENT_ADDRESS_POSITION": {
								"details": "The address location of the CellulaGame contract is adopted in this way so as not to be overwritten by the data in the proxy contract itself"
							},
							"_OWNER_POSITION": {
								"details": "Where the Owner is actually stored"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"proxy/CellulaGameProxy.sol\":504:2303  contract CellulaGameProxy is Proxy, ProxyOwnable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"proxy/ProxyOwnable.sol\":457:494  _transferProxyOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"proxy/ProxyOwnable.sol\":457:480  _transferProxyOwnership */\n  tag_7\n    /* \"proxy/ProxyOwnable.sol\":457:494  _transferProxyOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"proxy/CellulaGameProxy.sol\":504:2303  contract CellulaGameProxy is Proxy, ProxyOwnable {... */\n  jump(tag_8)\n    /* \"proxy/ProxyOwnable.sol\":1882:2103  function _transferProxyOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"proxy/ProxyOwnable.sol\":1961:1977  address oldOwner */\n  0x00\n    /* \"proxy/ProxyOwnable.sol\":1980:1997  _loadProxyOwner() */\n  tag_11\n  0x00\n  dup1\n  mload\n  0x20\n  data_793d5e288add57694fc2da147c04083308faff12a86820938f1ff30fd35e0b97\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"proxy/CellulaGameProxy.sol\":2243:2258  sload(position) */\n  sload\n  swap1\n    /* \"proxy/CellulaGameProxy.sol\":2060:2300  function _loadProxyOwner() internal view override returns (address) {... */\n  jump\n    /* \"proxy/ProxyOwnable.sol\":1980:1997  _loadProxyOwner() */\ntag_11:\n    /* \"proxy/ProxyOwnable.sol\":1961:1997  address oldOwner = _loadProxyOwner() */\n  swap1\n  pop\n    /* \"proxy/ProxyOwnable.sol\":2008:2034  _storeProxyOwner(newOwner) */\n  tag_13\n    /* \"proxy/ProxyOwnable.sol\":2025:2033  newOwner */\n  dup3\n  0x00\n  dup1\n  mload\n  0x20\n  data_793d5e288add57694fc2da147c04083308faff12a86820938f1ff30fd35e0b97\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"proxy/CellulaGameProxy.sol\":2011:2035  sstore(position, _owner) */\n  sstore\n    /* \"proxy/CellulaGameProxy.sol\":1871:2053  function _storeProxyOwner(address _owner) internal override {... */\n  jump\n    /* \"proxy/ProxyOwnable.sol\":2008:2034  _storeProxyOwner(newOwner) */\ntag_13:\n    /* \"proxy/ProxyOwnable.sol\":2086:2094  newOwner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"proxy/ProxyOwnable.sol\":2050:2095  ProxyOwnershipTransferred(oldOwner, newOwner) */\n  and\n    /* \"proxy/ProxyOwnable.sol\":2076:2084  oldOwner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"proxy/ProxyOwnable.sol\":2050:2095  ProxyOwnershipTransferred(oldOwner, newOwner) */\n  and\n  0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"proxy/ProxyOwnable.sol\":1950:2103  {... */\n  pop\n    /* \"proxy/ProxyOwnable.sol\":1882:2103  function _transferProxyOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"proxy/CellulaGameProxy.sol\":504:2303  contract CellulaGameProxy is Proxy, ProxyOwnable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_793d5e288add57694fc2da147c04083308faff12a86820938f1ff30fd35e0b97 3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd\n\nsub_0: assembly {\n        /* \"proxy/CellulaGameProxy.sol\":504:2303  contract CellulaGameProxy is Proxy, ProxyOwnable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x025313a2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x10b2b981\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3d643cbe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xafe13fbc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf1739cae\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_11\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_10:\n        /* \"proxy/CellulaGameProxy.sol\":504:2303  contract CellulaGameProxy is Proxy, ProxyOwnable {... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2684  _fallback */\n      tag_11\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      jump\t// in\n        /* \"proxy/ProxyOwnable.sol\":579:674  function proxyOwner() public view returns (address) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"proxy/ProxyOwnable.sol\":579:674  function proxyOwner() public view returns (address) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"proxy/CellulaGameProxy.sol\":1432:1536  function getImplementAddress() public view returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_16\n      tag_22\n      jump\t// in\n        /* \"proxy/CellulaGameProxy.sol\":1084:1368  function setImplementAddress(address cellulaGame)public onlyProxyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_10\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"proxy/ProxyOwnable.sol\":1241:1359  function renounceProxyOwnership() public virtual onlyProxyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_10\n      tag_31\n      jump\t// in\n        /* \"proxy/ProxyOwnable.sol\":1509:1727  function transferProxyOwnership(address newOwner) public virtual onlyProxyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_10\n      tag_34\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_39\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_40\n        /* \"proxy/CellulaGameProxy.sol\":802:849  keccak256(\"Cellula.Game.impl.address.84c2ce47\") */\n      0x9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e1\n        /* \"proxy/CellulaGameProxy.sol\":1809:1824  sload(position) */\n      sload\n      swap1\n        /* \"proxy/CellulaGameProxy.sol\":1610:1864  function _implementation() internal view virtual override returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_42\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"proxy/ProxyOwnable.sol\":579:674  function proxyOwner() public view returns (address) {... */\n    tag_17:\n        /* \"proxy/ProxyOwnable.sol\":622:629  address */\n      0x00\n        /* \"proxy/ProxyOwnable.sol\":649:666  _loadProxyOwner() */\n      tag_44\n        /* \"proxy/CellulaGameProxy.sol\":948:994  keccak256(\"Cellula.Game.Proxy.owner.7e2efd65\") */\n      0x3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd\n        /* \"proxy/CellulaGameProxy.sol\":2243:2258  sload(position) */\n      sload\n      swap1\n        /* \"proxy/CellulaGameProxy.sol\":2060:2300  function _loadProxyOwner() internal view override returns (address) {... */\n      jump\n        /* \"proxy/ProxyOwnable.sol\":649:666  _loadProxyOwner() */\n    tag_44:\n        /* \"proxy/ProxyOwnable.sol\":642:666  return _loadProxyOwner() */\n      swap1\n      pop\n        /* \"proxy/ProxyOwnable.sol\":579:674  function proxyOwner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"proxy/CellulaGameProxy.sol\":1432:1536  function getImplementAddress() public view returns (address) {... */\n    tag_22:\n        /* \"proxy/CellulaGameProxy.sol\":1484:1491  address */\n      0x00\n        /* \"proxy/CellulaGameProxy.sol\":1511:1528  _implementation() */\n      tag_44\n        /* \"proxy/CellulaGameProxy.sol\":802:849  keccak256(\"Cellula.Game.impl.address.84c2ce47\") */\n      0x9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e1\n        /* \"proxy/CellulaGameProxy.sol\":1809:1824  sload(position) */\n      sload\n      swap1\n        /* \"proxy/CellulaGameProxy.sol\":1610:1864  function _implementation() internal view virtual override returns (address) {... */\n      jump\n        /* \"proxy/CellulaGameProxy.sol\":1084:1368  function setImplementAddress(address cellulaGame)public onlyProxyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"proxy/ProxyOwnable.sol\":808:820  proxyOwner() */\n      tag_51\n        /* \"proxy/ProxyOwnable.sol\":808:818  proxyOwner */\n      tag_17\n        /* \"proxy/ProxyOwnable.sol\":808:820  proxyOwner() */\n      jump\t// in\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy/ProxyOwnable.sol\":808:836  proxyOwner() == _msgSender() */\n      and\n      eq\n        /* \"proxy/ProxyOwnable.sol\":800:878  require(proxyOwner() == _msgSender(), \"ProxyOwnable: caller is not the owner\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy/CellulaGameProxy.sol\":1174:1196  cellulaGame.isContract */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      extcodesize\n        /* \"proxy/CellulaGameProxy.sol\":1166:1229  require(cellulaGame.isContract(), \"ADDRESS SHOULD BE CONTRACT\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1121:1123   */\n      0x20\n        /* \"proxy/CellulaGameProxy.sol\":1166:1229  require(cellulaGame.isContract(), \"ADDRESS SHOULD BE CONTRACT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1103:1124   */\n      mstore\n        /* \"#utility.yul\":1160:1162   */\n      0x1a\n        /* \"#utility.yul\":1140:1158   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1133:1163   */\n      mstore\n        /* \"#utility.yul\":1199:1227   */\n      0x414444524553532053484f554c4420424520434f4e5452414354000000000000\n        /* \"#utility.yul\":1179:1197   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1172:1228   */\n      mstore\n        /* \"#utility.yul\":1245:1263   */\n      0x64\n      add\n        /* \"proxy/CellulaGameProxy.sol\":1166:1229  require(cellulaGame.isContract(), \"ADDRESS SHOULD BE CONTRACT\") */\n      tag_53\n        /* \"#utility.yul\":919:1269   */\n      jump\n        /* \"proxy/CellulaGameProxy.sol\":1166:1229  require(cellulaGame.isContract(), \"ADDRESS SHOULD BE CONTRACT\") */\n    tag_58:\n        /* \"proxy/CellulaGameProxy.sol\":802:849  keccak256(\"Cellula.Game.impl.address.84c2ce47\") */\n      0x9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e1\n        /* \"proxy/CellulaGameProxy.sol\":1321:1350  sstore(position, cellulaGame) */\n      sstore\n        /* \"proxy/CellulaGameProxy.sol\":1084:1368  function setImplementAddress(address cellulaGame)public onlyProxyOwner {... */\n      jump\t// out\n        /* \"proxy/ProxyOwnable.sol\":1241:1359  function renounceProxyOwnership() public virtual onlyProxyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"proxy/ProxyOwnable.sol\":808:820  proxyOwner() */\n      tag_63\n        /* \"proxy/ProxyOwnable.sol\":808:818  proxyOwner */\n      tag_17\n        /* \"proxy/ProxyOwnable.sol\":808:820  proxyOwner() */\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy/ProxyOwnable.sol\":808:836  proxyOwner() == _msgSender() */\n      and\n      eq\n        /* \"proxy/ProxyOwnable.sol\":800:878  require(proxyOwner() == _msgSender(), \"ProxyOwnable: caller is not the owner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_64:\n        /* \"proxy/ProxyOwnable.sol\":1316:1351  _transferProxyOwnership(address(0)) */\n      tag_39\n        /* \"proxy/ProxyOwnable.sol\":1348:1349  0 */\n      0x00\n        /* \"proxy/ProxyOwnable.sol\":1316:1339  _transferProxyOwnership */\n      tag_68\n        /* \"proxy/ProxyOwnable.sol\":1316:1351  _transferProxyOwnership(address(0)) */\n      jump\t// in\n        /* \"proxy/ProxyOwnable.sol\":1509:1727  function transferProxyOwnership(address newOwner) public virtual onlyProxyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"proxy/ProxyOwnable.sol\":808:820  proxyOwner() */\n      tag_71\n        /* \"proxy/ProxyOwnable.sol\":808:818  proxyOwner */\n      tag_17\n        /* \"proxy/ProxyOwnable.sol\":808:820  proxyOwner() */\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy/ProxyOwnable.sol\":808:836  proxyOwner() == _msgSender() */\n      and\n      eq\n        /* \"proxy/ProxyOwnable.sol\":800:878  require(proxyOwner() == _msgSender(), \"ProxyOwnable: caller is not the owner\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy/ProxyOwnable.sol\":1608:1630  newOwner != address(0) */\n      dup2\n      and\n        /* \"proxy/ProxyOwnable.sol\":1600:1673  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1476:1478   */\n      0x20\n        /* \"proxy/ProxyOwnable.sol\":1600:1673  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1458:1479   */\n      mstore\n        /* \"#utility.yul\":1515:1517   */\n      0x26\n        /* \"#utility.yul\":1495:1513   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1488:1518   */\n      mstore\n        /* \"#utility.yul\":1554:1588   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1534:1552   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1527:1589   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1605:1623   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1598:1634   */\n      mstore\n        /* \"#utility.yul\":1651:1670   */\n      0x84\n      add\n        /* \"proxy/ProxyOwnable.sol\":1600:1673  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_53\n        /* \"#utility.yul\":1274:1676   */\n      jump\n        /* \"proxy/ProxyOwnable.sol\":1600:1673  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_75:\n        /* \"proxy/ProxyOwnable.sol\":1686:1719  _transferProxyOwnership(newOwner) */\n      tag_78\n        /* \"proxy/ProxyOwnable.sol\":1710:1718  newOwner */\n      dup2\n        /* \"proxy/ProxyOwnable.sol\":1686:1709  _transferProxyOwnership */\n      tag_68\n        /* \"proxy/ProxyOwnable.sol\":1686:1719  _transferProxyOwnership(newOwner) */\n      jump\t// in\n    tag_78:\n        /* \"proxy/ProxyOwnable.sol\":1509:1727  function transferProxyOwnership(address newOwner) public virtual onlyProxyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup1\n      iszero\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"proxy/ProxyOwnable.sol\":1882:2103  function _transferProxyOwnership(address newOwner) internal virtual {... */\n    tag_68:\n        /* \"proxy/ProxyOwnable.sol\":1961:1977  address oldOwner */\n      0x00\n        /* \"proxy/ProxyOwnable.sol\":1980:1997  _loadProxyOwner() */\n      tag_88\n        /* \"proxy/CellulaGameProxy.sol\":948:994  keccak256(\"Cellula.Game.Proxy.owner.7e2efd65\") */\n      0x3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd\n        /* \"proxy/CellulaGameProxy.sol\":2243:2258  sload(position) */\n      sload\n      swap1\n        /* \"proxy/CellulaGameProxy.sol\":2060:2300  function _loadProxyOwner() internal view override returns (address) {... */\n      jump\n        /* \"proxy/ProxyOwnable.sol\":1980:1997  _loadProxyOwner() */\n    tag_88:\n        /* \"proxy/ProxyOwnable.sol\":1961:1997  address oldOwner = _loadProxyOwner() */\n      swap1\n      pop\n        /* \"proxy/ProxyOwnable.sol\":2008:2034  _storeProxyOwner(newOwner) */\n      tag_89\n        /* \"proxy/ProxyOwnable.sol\":2025:2033  newOwner */\n      dup3\n        /* \"proxy/CellulaGameProxy.sol\":948:994  keccak256(\"Cellula.Game.Proxy.owner.7e2efd65\") */\n      0x3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd\n        /* \"proxy/CellulaGameProxy.sol\":2011:2035  sstore(position, _owner) */\n      sstore\n        /* \"proxy/CellulaGameProxy.sol\":1871:2053  function _storeProxyOwner(address _owner) internal override {... */\n      jump\n        /* \"proxy/ProxyOwnable.sol\":2008:2034  _storeProxyOwner(newOwner) */\n    tag_89:\n        /* \"proxy/ProxyOwnable.sol\":2086:2094  newOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy/ProxyOwnable.sol\":2050:2095  ProxyOwnershipTransferred(oldOwner, newOwner) */\n      and\n        /* \"proxy/ProxyOwnable.sol\":2076:2084  oldOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"proxy/ProxyOwnable.sol\":2050:2095  ProxyOwnershipTransferred(oldOwner, newOwner) */\n      and\n      0x5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"proxy/ProxyOwnable.sol\":1950:2103  {... */\n      pop\n        /* \"proxy/ProxyOwnable.sol\":1882:2103  function _transferProxyOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_27:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_95:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_96:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":513:914   */\n    tag_54:\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"#utility.yul\":697:718   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x25\n        /* \"#utility.yul\":734:752   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x50726f78794f776e61626c653a2063616c6c6572206973206e6f742074686520\n        /* \"#utility.yul\":788:790   */\n      0x40\n        /* \"#utility.yul\":773:791   */\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":859:861   */\n      0x60\n        /* \"#utility.yul\":844:862   */\n      dup3\n      add\n        /* \"#utility.yul\":837:872   */\n      mstore\n        /* \"#utility.yul\":904:907   */\n      0x80\n        /* \"#utility.yul\":889:908   */\n      add\n      swap1\n        /* \"#utility.yul\":513:914   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209d182b1269c6a71bdc096a04cd2ada06a8233f7ac92275c6b86e31d0655ad74b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_642": {
									"entryPoint": null,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_loadProxyOwner_620": {
									"entryPoint": null,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_storeProxyOwner_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferProxyOwnership_724": {
									"entryPoint": 31,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b610093565b60006100376000805160206105208339815191525490565b905061004f8260008051602061052083398151915255565b816001600160a01b0316816001600160a01b03167f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd960405160405180910390a35050565b61047e806100a26000396000f3fe60806040526004361061004e5760003560e01c8063025313a21461006557806310b2b981146100965780633d643cbe146100ab578063afe13fbc146100cb578063f1739cae146100e05761005d565b3661005d5761005b610100565b005b61005b610100565b34801561007157600080fd5b5061007a610132565b6040516001600160a01b03909116815260200160405180910390f35b3480156100a257600080fd5b5061007a610161565b3480156100b757600080fd5b5061005b6100c63660046103d3565b61018b565b3480156100d757600080fd5b5061005b61023e565b3480156100ec57600080fd5b5061005b6100fb3660046103d3565b610277565b61013061012b7f9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e15490565b610317565b565b600061015c7f3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd5490565b905090565b600061015c7f9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e15490565b33610194610132565b6001600160a01b0316146101c35760405162461bcd60e51b81526004016101ba90610403565b60405180910390fd5b6001600160a01b0381163b61021a5760405162461bcd60e51b815260206004820152601a60248201527f414444524553532053484f554c4420424520434f4e545241435400000000000060448201526064016101ba565b7f9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e155565b33610247610132565b6001600160a01b03161461026d5760405162461bcd60e51b81526004016101ba90610403565b610130600061033b565b33610280610132565b6001600160a01b0316146102a65760405162461bcd60e51b81526004016101ba90610403565b6001600160a01b03811661030b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ba565b6103148161033b565b50565b3660008037600080366000845af43d6000803e808015610336573d6000f35b3d6000fd5b60006103657f3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd5490565b905061038f827f3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd55565b816001600160a01b0316816001600160a01b03167f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd960405160405180910390a35050565b6000602082840312156103e557600080fd5b81356001600160a01b03811681146103fc57600080fd5b9392505050565b60208082526025908201527f50726f78794f776e61626c653a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b60608201526080019056fea26469706673582212209d182b1269c6a71bdc096a04cd2ada06a8233f7ac92275c6b86e31d0655ad74b64736f6c634300080a00333d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x520 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4F DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x520 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5A3E66EFAA1E445EBD894728A69D6959842EA1E97BD79B892797106E270EFCD9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x47E DUP1 PUSH2 0xA2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25313A2 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x10B2B981 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x3D643CBE EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xAFE13FBC EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xF1739CAE EQ PUSH2 0xE0 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x161 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0x23E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x12B PUSH32 0x9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C PUSH32 0x3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C PUSH32 0x9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH2 0x194 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414444524553532053484F554C4420424520434F4E5452414354000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH32 0x9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x247 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x130 PUSH1 0x0 PUSH2 0x33B JUMP JUMPDEST CALLER PUSH2 0x280 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x314 DUP2 PUSH2 0x33B JUMP JUMPDEST POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x336 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x365 PUSH32 0x3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP3 PUSH32 0x3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5A3E66EFAA1E445EBD894728A69D6959842EA1E97BD79B892797106E270EFCD9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F78794F776E61626C653A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 XOR 0x2B SLT PUSH10 0xC6A71BDC096A04CD2ADA MOD 0xA8 0x23 EXTCODEHASH PUSH27 0xC92275C6B86E31D0655AD74B64736F6C634300080A00333D5FEF76 0xC3 0xED PUSH7 0xB0EF56FB540C5A 0xAE 0x1F PUSH25 0xBB9D0A3B938760982770C408C354CD00000000000000000000 ",
							"sourceMap": "504:1799:4:-:0;;;;;;;;;;;;-1:-1:-1;457:37:5;719:10:3;457:23:5;:37::i;:::-;504:1799:4;;1882:221:5;1961:16;1980:17;-1:-1:-1;;;;;;;;;;;2243:15:4;;2060:240;1980:17:5;1961:36;-1:-1:-1;2008:26:5;2025:8;-1:-1:-1;;;;;;;;;;;2011:24:4;1871:182;2008:26:5;2086:8;-1:-1:-1;;;;;2050:45:5;2076:8;-1:-1:-1;;;;;2050:45:5;;;;;;;;;;;1950:153;1882:221;:::o;504:1799:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_150": {
									"entryPoint": null,
									"id": 150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_158": {
									"entryPoint": null,
									"id": 158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_163": {
									"entryPoint": null,
									"id": 163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_123": {
									"entryPoint": 791,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_142": {
									"entryPoint": 256,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_591": {
									"entryPoint": null,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_loadProxyOwner_620": {
									"entryPoint": null,
									"id": 620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_storeProxyOwner_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferProxyOwnership_724": {
									"entryPoint": 827,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getImplementAddress_573": {
									"entryPoint": 353,
									"id": 573,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@proxyOwner_652": {
									"entryPoint": 306,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceProxyOwnership_680": {
									"entryPoint": 574,
									"id": 680,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setImplementAddress_563": {
									"entryPoint": 395,
									"id": 563,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferProxyOwnership_703": {
									"entryPoint": 631,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04755ba483b415c0010c66c558ec738faa90aa49e561847a09d7d1641110674d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0b25863f39c36f45391571ed8d1a0ead5f653b102114859e004a80bff1b90__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1678:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:6",
														"type": ""
													}
												],
												"src": "14:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:6"
															},
															"nodeType": "YulIf",
															"src": "302:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:6"
															},
															"nodeType": "YulIf",
															"src": "408:70:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:6",
														"type": ""
													}
												],
												"src": "222:286:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:6"
																	},
																	{
																		"hexValue": "50726f78794f776e61626c653a2063616c6c6572206973206e6f742074686520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:34:6",
																		"type": "",
																		"value": "ProxyOwnable: caller is not the "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "848:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "859:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "844:18:6"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "864:7:6",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "837:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "881:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "904:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "889:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "881:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04755ba483b415c0010c66c558ec738faa90aa49e561847a09d7d1641110674d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:6",
														"type": ""
													}
												],
												"src": "513:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1093:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1110:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1121:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1103:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1155:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1140:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1160:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1133:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1133:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1183:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1194:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:18:6"
																	},
																	{
																		"hexValue": "414444524553532053484f554c4420424520434f4e5452414354",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1199:28:6",
																		"type": "",
																		"value": "ADDRESS SHOULD BE CONTRACT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1172:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1172:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1237:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1237:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0b25863f39c36f45391571ed8d1a0ead5f653b102114859e004a80bff1b90__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1070:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													}
												],
												"src": "919:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1448:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1465:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1458:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1458:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1499:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1510:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1515:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1488:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1488:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1538:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1549:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1534:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1554:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1527:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1620:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1625:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1643:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1655:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1666:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1651:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1643:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1425:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1439:4:6",
														"type": ""
													}
												],
												"src": "1274:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_04755ba483b415c0010c66c558ec738faa90aa49e561847a09d7d1641110674d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ProxyOwnable: caller is not the \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_09d0b25863f39c36f45391571ed8d1a0ead5f653b102114859e004a80bff1b90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"ADDRESS SHOULD BE CONTRACT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c8063025313a21461006557806310b2b981146100965780633d643cbe146100ab578063afe13fbc146100cb578063f1739cae146100e05761005d565b3661005d5761005b610100565b005b61005b610100565b34801561007157600080fd5b5061007a610132565b6040516001600160a01b03909116815260200160405180910390f35b3480156100a257600080fd5b5061007a610161565b3480156100b757600080fd5b5061005b6100c63660046103d3565b61018b565b3480156100d757600080fd5b5061005b61023e565b3480156100ec57600080fd5b5061005b6100fb3660046103d3565b610277565b61013061012b7f9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e15490565b610317565b565b600061015c7f3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd5490565b905090565b600061015c7f9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e15490565b33610194610132565b6001600160a01b0316146101c35760405162461bcd60e51b81526004016101ba90610403565b60405180910390fd5b6001600160a01b0381163b61021a5760405162461bcd60e51b815260206004820152601a60248201527f414444524553532053484f554c4420424520434f4e545241435400000000000060448201526064016101ba565b7f9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e155565b33610247610132565b6001600160a01b03161461026d5760405162461bcd60e51b81526004016101ba90610403565b610130600061033b565b33610280610132565b6001600160a01b0316146102a65760405162461bcd60e51b81526004016101ba90610403565b6001600160a01b03811661030b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ba565b6103148161033b565b50565b3660008037600080366000845af43d6000803e808015610336573d6000f35b3d6000fd5b60006103657f3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd5490565b905061038f827f3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd55565b816001600160a01b0316816001600160a01b03167f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd960405160405180910390a35050565b6000602082840312156103e557600080fd5b81356001600160a01b03811681146103fc57600080fd5b9392505050565b60208082526025908201527f50726f78794f776e61626c653a2063616c6c6572206973206e6f74207468652060408201526437bbb732b960d91b60608201526080019056fea26469706673582212209d182b1269c6a71bdc096a04cd2ada06a8233f7ac92275c6b86e31d0655ad74b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25313A2 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x10B2B981 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x3D643CBE EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xAFE13FBC EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xF1739CAE EQ PUSH2 0xE0 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x161 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0x23E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH2 0x130 PUSH2 0x12B PUSH32 0x9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C PUSH32 0x3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C PUSH32 0x9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH2 0x194 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x414444524553532053484F554C4420424520434F4E5452414354000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH32 0x9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x247 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x130 PUSH1 0x0 PUSH2 0x33B JUMP JUMPDEST CALLER PUSH2 0x280 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x314 DUP2 PUSH2 0x33B JUMP JUMPDEST POP JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x336 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x365 PUSH32 0x3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP3 PUSH32 0x3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD SSTORE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5A3E66EFAA1E445EBD894728A69D6959842EA1E97BD79B892797106E270EFCD9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F78794F776E61626C653A2063616C6C6572206973206E6F742074686520 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 XOR 0x2B SLT PUSH10 0xC6A71BDC096A04CD2ADA MOD 0xA8 0x23 EXTCODEHASH PUSH27 0xC92275C6B86E31D0655AD74B64736F6C634300080A003300000000 ",
							"sourceMap": "504:1799:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:1;:9;:11::i;:::-;504:1799:4;;2675:11:1;:9;:11::i;579:95:5:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;178:32:6;;;160:51;;148:2;133:18;579:95:5;;;;;;;1432:104:4;;;;;;;;;;;;;:::i;1084:284::-;;;;;;;;;;-1:-1:-1;1084:284:4;;;;;:::i;:::-;;:::i;1241:118:5:-;;;;;;;;;;;;;:::i;1509:218::-;;;;;;;;;;-1:-1:-1;1509:218:5;;;;;:::i;:::-;;:::i;2322:110:1:-;2397:28;2407:17;802:47:4;1809:15;;1610:254;2407:17:1;2397:9;:28::i;:::-;2322:110::o;579:95:5:-;622:7;649:17;948:46:4;2243:15;;2060:240;649:17:5;642:24;;579:95;:::o;1432:104:4:-;1484:7;1511:17;802:47;1809:15;;1610:254;1084:284;719:10:3;808:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;808:28:5;;800:78;;;;-1:-1:-1;;;800:78:5;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1174:22:4;::::1;1702:19:2::0;1166:63:4::1;;;::::0;-1:-1:-1;;;1166:63:4;;1121:2:6;1166:63:4::1;::::0;::::1;1103:21:6::0;1160:2;1140:18;;;1133:30;1199:28;1179:18;;;1172:56;1245:18;;1166:63:4::1;919:350:6::0;1166:63:4::1;802:47;1321:29:::0;1084:284::o;1241:118:5:-;719:10:3;808:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;808:28:5;;800:78;;;;-1:-1:-1;;;800:78:5;;;;;;;:::i;:::-;1316:35:::1;1348:1;1316:23;:35::i;1509:218::-:0;719:10:3;808:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;808:28:5;;800:78;;;;-1:-1:-1;;;800:78:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;1608:22:5;::::1;1600:73;;;::::0;-1:-1:-1;;;1600:73:5;;1476:2:6;1600:73:5::1;::::0;::::1;1458:21:6::0;1515:2;1495:18;;;1488:30;1554:34;1534:18;;;1527:62;-1:-1:-1;;;1605:18:6;;;1598:36;1651:19;;1600:73:5::1;1274:402:6::0;1600:73:5::1;1686:33;1710:8;1686:23;:33::i;:::-;1509:218:::0;:::o;948:895:1:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;1882:221:5;1961:16;1980:17;948:46:4;2243:15;;2060:240;1980:17:5;1961:36;;2008:26;2025:8;948:46:4;2011:24;1871:182;2008:26:5;2086:8;-1:-1:-1;;;;;2050:45:5;2076:8;-1:-1:-1;;;;;2050:45:5;;;;;;;;;;;1950:153;1882:221;:::o;222:286:6:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:6;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:6:o;513:401::-;715:2;697:21;;;754:2;734:18;;;727:30;793:34;788:2;773:18;;766:62;-1:-1:-1;;;859:2:6;844:18;;837:35;904:3;889:19;;513:401::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "230000",
								"executionCost": "26190",
								"totalCost": "256190"
							},
							"external": {
								"": "infinite",
								"getImplementAddress()": "2339",
								"proxyOwner()": "2317",
								"renounceProxyOwnership()": "11122",
								"setImplementAddress(address)": "27217",
								"transferProxyOwnership(address)": "28404"
							},
							"internal": {
								"_implementation()": "infinite",
								"_loadProxyOwner()": "infinite",
								"_storeProxyOwner(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 457,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 457,
									"end": 480,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 457,
									"end": 494,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 457,
									"end": 494,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 457,
									"end": 494,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1882,
									"end": 2103,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1882,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1977,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 1997,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "793D5E288ADD57694FC2DA147C04083308FAFF12A86820938F1FF30FD35E0B97"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2243,
									"end": 2258,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2243,
									"end": 2258,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2060,
									"end": 2300,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1980,
									"end": 1997,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1980,
									"end": 1997,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1961,
									"end": 1997,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2008,
									"end": 2034,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2025,
									"end": 2033,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "793D5E288ADD57694FC2DA147C04083308FAFF12A86820938F1FF30FD35E0B97"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2011,
									"end": 2035,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1871,
									"end": 2053,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2008,
									"end": 2034,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2008,
									"end": 2034,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2094,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2076,
									"end": 2084,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "PUSH",
									"source": 5,
									"value": "5A3E66EFAA1E445EBD894728A69D6959842EA1E97BD79B892797106E270EFCD9"
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2050,
									"end": 2095,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 1950,
									"end": 2103,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1882,
									"end": 2103,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1882,
									"end": 2103,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 504,
									"end": 2303,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d182b1269c6a71bdc096a04cd2ada06a8233f7ac92275c6b86e31d0655ad74b64736f6c634300080a0033",
									".code": [
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "25313A2"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "10B2B981"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "3D643CBE"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "AFE13FBC"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "F1739CAE"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 504,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 579,
											"end": 674,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 849,
											"name": "PUSH",
											"source": 4,
											"value": "9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1864,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 579,
											"end": 674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 622,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 948,
											"end": 994,
											"name": "PUSH",
											"source": 4,
											"value": "3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD"
										},
										{
											"begin": 2243,
											"end": 2258,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2243,
											"end": 2258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2300,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 649,
											"end": 666,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 649,
											"end": 666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 642,
											"end": 666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 579,
											"end": 674,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1432,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 802,
											"end": 849,
											"name": "PUSH",
											"source": 4,
											"value": "9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1864,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 808,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 808,
											"end": 836,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1174,
											"end": 1196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1196,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1124,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1162,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1133,
											"end": 1163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "414444524553532053484F554C4420424520434F4E5452414354000000000000"
										},
										{
											"begin": 1179,
											"end": 1197,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1179,
											"end": 1197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1172,
											"end": 1228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 919,
											"end": 1269,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1166,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 802,
											"end": 849,
											"name": "PUSH",
											"source": 4,
											"value": "9A1F1E098310D583B5217269E373BF0137D9EBBD218AB5D04D9FF18A0C5C62E1"
										},
										{
											"begin": 1321,
											"end": 1350,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1368,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 808,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 808,
											"end": 836,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1316,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1316,
											"end": 1351,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 808,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 808,
											"end": 836,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 800,
											"end": 878,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 800,
											"end": 878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1630,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1478,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1495,
											"end": 1513,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1495,
											"end": 1513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1495,
											"end": 1513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1534,
											"end": 1552,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1534,
											"end": 1552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1527,
											"end": 1589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1651,
											"end": 1670,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1651,
											"end": 1670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1274,
											"end": 1676,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1600,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1710,
											"end": 1718,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1686,
											"end": 1719,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1686,
											"end": 1719,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1686,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1727,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 2103,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1882,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 948,
											"end": 994,
											"name": "PUSH",
											"source": 4,
											"value": "3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD"
										},
										{
											"begin": 2243,
											"end": 2258,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2243,
											"end": 2258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2300,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 1997,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1980,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2025,
											"end": 2033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 948,
											"end": 994,
											"name": "PUSH",
											"source": 4,
											"value": "3D5FEF76C3ED66B0EF56FB540C5AAE1F78BB9D0A3B938760982770C408C354CD"
										},
										{
											"begin": 2011,
											"end": 2035,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 2053,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2034,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2008,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2084,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "5A3E66EFAA1E445EBD894728A69D6959842EA1E97BD79B892797106E270EFCD9"
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2095,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 2103,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 513,
											"end": 914,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 513,
											"end": 914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 697,
											"end": 718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 6,
											"value": "50726F78794F776E61626C653A2063616C6C6572206973206E6F742074686520"
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 844,
											"end": 862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 837,
											"end": 872,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 904,
											"end": 907,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 889,
											"end": 908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 889,
											"end": 908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 513,
											"end": 914,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								},
								"793D5E288ADD57694FC2DA147C04083308FAFF12A86820938F1FF30FD35E0B97": "3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd"
							}
						},
						"methodIdentifiers": {
							"getImplementAddress()": "10b2b981",
							"proxyOwner()": "025313a2",
							"renounceProxyOwnership()": "afe13fbc",
							"setImplementAddress(address)": "3d643cbe",
							"transferProxyOwnership(address)": "f1739cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ProxyOwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getImplementAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceProxyOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cellulaGame\",\"type\":\"address\"}],\"name\":\"setImplementAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"upgrade limit\\uff1ahe new version of the contract can only add data on the basis of the previous version of the contract,                    and the order of declaration must be behind the original data.\\u3002\",\"kind\":\"dev\",\"methods\":{\"getImplementAddress()\":{\"details\":\"return the address of the implement contract\"},\"proxyOwner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceProxyOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setImplementAddress(address)\":{\"details\":\"Set the address of the implement contract , only called by the owner\"},\"transferProxyOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_IMPLEMENT_ADDRESS_POSITION\":{\"details\":\"The address location of the CellulaGame contract is adopted in this way so as not to be overwritten by the data in the proxy contract itself\"},\"_OWNER_POSITION\":{\"details\":\"Where the Owner is actually stored\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"proxy contract of CellulaGame\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy/CellulaGameProxy.sol\":\"CellulaGameProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"proxy/CellulaGameProxy.sol\":{\"keccak256\":\"0xe9f7bf9563fa236438bba3d825913af57d39f3bbe350704df027d28b29db7ca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53bcc2b029cb36002897dfeb391c2e01e8ad6970bd9e6b81bb6919da4efaa097\",\"dweb:/ipfs/QmXcjGSvhgzE65FVtz17xzZsH2C4kzNE3bVqAPnnkpnwJX\"]},\"proxy/ProxyOwnable.sol\":{\"keccak256\":\"0x4b62f4ee61ac03aa48f5185382a91ff4e6ccb0a10791e935047f7f65dc4db5d6\",\"urls\":[\"bzz-raw://20e2e361f75a5305a65221a280674ad38ea20ba9cdccc3da4a7186fa2367932a\",\"dweb:/ipfs/QmPLcmE3aH62hr7rWo4zMmZcnZ2NW83skPhGgfZTNprma2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "proxy contract of CellulaGame",
						"version": 1
					}
				}
			},
			"proxy/ProxyOwnable.sol": {
				"ProxyOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "ProxyOwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxyOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceProxyOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferProxyOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The proxy contract uses the owner permission management library, and the function name is distinguished from the proxy contract",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"proxyOwner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceProxyOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferProxyOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxyOwner()": "025313a2",
							"renounceProxyOwnership()": "afe13fbc",
							"transferProxyOwnership(address)": "f1739cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ProxyOwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxyOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceProxyOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferProxyOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The proxy contract uses the owner permission management library, and the function name is distinguished from the proxy contract\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"proxyOwner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceProxyOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferProxyOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy/ProxyOwnable.sol\":\"ProxyOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"proxy/ProxyOwnable.sol\":{\"keccak256\":\"0x4b62f4ee61ac03aa48f5185382a91ff4e6ccb0a10791e935047f7f65dc4db5d6\",\"urls\":[\"bzz-raw://20e2e361f75a5305a65221a280674ad38ea20ba9cdccc3da4a7186fa2367932a\",\"dweb:/ipfs/QmPLcmE3aH62hr7rWo4zMmZcnZ2NW83skPhGgfZTNprma2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> proxy/ProxyOwnable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "proxy/ProxyOwnable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.10;\"\n--> proxy/ProxyOwnable.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.10;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "proxy/ProxyOwnable.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							516
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 517,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 516,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								516
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "124:598:1",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "Proxy",
							"nameLocation": "741:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1008:835:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1027:810:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1286:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:14:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1267:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1267:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1428:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:5:1"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1462:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1481:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:60:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1432:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1576:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:16:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1555:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:38:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1688:59:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1681:66:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:1",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1768:59:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1793:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1796:14:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1796:16:1"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1786:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1786:27:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1786:27:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1760:67:1",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1614:6:1"
															},
															"nodeType": "YulSwitch",
															"src": "1607:220:1"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": false,
														"src": "1462:14:1",
														"valueSize": 1
													}
												],
												"id": 121,
												"nodeType": "InlineAssembly",
												"src": "1018:819:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "753:190:1",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "957:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "975:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "967:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:24:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:1"
									},
									"scope": 164,
									"src": "948:895:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1849:173:1",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2036:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2085:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:9:1"
									},
									"scope": 164,
									"src": "2027:67:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2360:72:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 133,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2370:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2370:17:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 137,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2407:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2397:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2397:28:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2100:217:1",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2331:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:1"
									},
									"scope": 164,
									"src": "2322:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "2665:28:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 146,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2675:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2675:11:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2438:186:1",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 150,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:2:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:1"
									},
									"scope": 164,
									"src": "2629:64:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "2888:28:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2898:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2898:11:1"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "2699:149:1",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 158,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:1"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:0:1"
									},
									"scope": 164,
									"src": "2853:63:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "3242:2:1",
										"statements": []
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "2922:271:1",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3207:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:1"
									},
									"scope": 164,
									"src": "3198:46:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 165,
							"src": "723:2523:1",
							"usedErrors": []
						}
					],
					"src": "99:3148:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							494
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1478:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 175,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1702:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "1695:30:2"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1432:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1472:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:2"
									},
									"scope": 494,
									"src": "1412:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2718:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 193,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$494",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$494",
																				"typeString": "library Address"
																			}
																		],
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 191,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 196,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2761:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:2"
											},
											{
												"assignments": [
													202,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "2813:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 201,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 209,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 203,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2831:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 205,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2853:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 211,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2882:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:2"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2666:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2693:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:2"
									},
									"scope": 494,
									"src": "2647:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "3790:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3829:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 228,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3837:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 226,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															318
														],
														"referencedDeclaration": 318,
														"src": "3807:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 225,
												"id": 232,
												"nodeType": "Return",
												"src": "3800:79:2"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3723:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3739:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:2"
									},
									"scope": 494,
									"src": "3701:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "4255:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 247,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4294:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4302:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 250,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4311:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 246,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															318
														],
														"referencedDeclaration": 318,
														"src": "4272:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 245,
												"id": 252,
												"nodeType": "Return",
												"src": "4265:59:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4139:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4163:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4190:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4241:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:2"
									},
									"scope": 494,
									"src": "4108:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "4806:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 267,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4845:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 268,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4853:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 269,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4859:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 266,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															318
														],
														"referencedDeclaration": 318,
														"src": "4823:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 265,
												"id": 272,
												"nodeType": "Return",
												"src": "4816:94:2"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4724:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4740:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4759:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4792:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:2"
									},
									"scope": 494,
									"src": "4693:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "5344:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 291,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$494",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$494",
																				"typeString": "library Address"
																			}
																		],
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 289,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 294,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "5387:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:2"
											},
											{
												"assignments": [
													300,
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "5446:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 299,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 317,
														"src": "5460:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 301,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 309,
												"initialValue": {
													"arguments": [
														{
															"id": 307,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "5513:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 303,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "5487:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 305,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "5506:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 311,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "5562:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 312,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5570:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 313,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "5579:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 314,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "5591:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 310,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "5535:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 287,
												"id": 316,
												"nodeType": "Return",
												"src": "5528:76:2"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5205:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5229:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5256:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5279:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "5330:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:2"
									},
									"scope": 494,
									"src": "5165:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "5888:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "5924:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "5932:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 328,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															335,
															364
														],
														"referencedDeclaration": 364,
														"src": "5905:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 327,
												"id": 333,
												"nodeType": "Return",
												"src": "5898:80:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "5816:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "5832:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:2"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "5874:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:2"
									},
									"scope": 494,
									"src": "5788:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "6327:168:2",
										"statements": [
											{
												"assignments": [
													348,
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "6338:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 347,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "6352:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "6397:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 351,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "6379:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "6446:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "6454:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 359,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "6463:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 360,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6475:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 356,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "6419:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 362,
												"nodeType": "Return",
												"src": "6412:76:2"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "6206:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "6230:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "6257:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "6313:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:2"
									},
									"scope": 494,
									"src": "6169:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "6771:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "6809:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "6817:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 374,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															381,
															410
														],
														"referencedDeclaration": 410,
														"src": "6788:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 373,
												"id": 379,
												"nodeType": "Return",
												"src": "6781:84:2"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "6704:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "6720:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "6757:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:2"
									},
									"scope": 494,
									"src": "6674:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "7213:170:2",
										"statements": [
											{
												"assignments": [
													394,
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "7224:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 393,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "7238:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 395,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"arguments": [
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7285:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 397,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7265:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7334:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "7342:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 405,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "7351:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 406,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7363:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 402,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "7307:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 392,
												"id": 408,
												"nodeType": "Return",
												"src": "7300:76:2"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "7097:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "7121:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "7148:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "7199:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:2"
									},
									"scope": 494,
									"src": "7058:325:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "7865:434:2",
										"statements": [
											{
												"condition": {
													"id": 424,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 415,
													"src": "7879:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 446,
													"nodeType": "Block",
													"src": "8235:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 442,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "8257:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 443,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "8269:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 441,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "8249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 445,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:2"
														}
													]
												},
												"id": 447,
												"nodeType": "IfStatement",
												"src": "7875:418:2",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "7888:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 425,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "7906:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 437,
															"nodeType": "IfStatement",
															"src": "7902:286:2",
															"trueBody": {
																"id": 436,
																"nodeType": "Block",
																"src": "7930:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 431,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 413,
																							"src": "8132:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 430,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 182,
																						"src": "8121:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 433,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 429,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 435,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 438,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "8208:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 423,
															"id": 439,
															"nodeType": "Return",
															"src": "8201:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7716:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7740:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7762:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7795:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7851:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:2"
									},
									"scope": 494,
									"src": "7671:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "8680:135:2",
										"statements": [
											{
												"condition": {
													"id": 461,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 452,
													"src": "8694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 470,
													"nodeType": "Block",
													"src": "8751:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 466,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "8773:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 467,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "8785:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 465,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "8765:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 469,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:2"
														}
													]
												},
												"id": 471,
												"nodeType": "IfStatement",
												"src": "8690:119:2",
												"trueBody": {
													"id": 464,
													"nodeType": "Block",
													"src": "8703:42:2",
													"statements": [
														{
															"expression": {
																"id": 462,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8724:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 460,
															"id": 463,
															"nodeType": "Return",
															"src": "8717:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8555:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 451,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 455,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:2"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "8666:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:2"
									},
									"scope": 494,
									"src": "8520:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8904:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 480,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "8980:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 490,
													"nodeType": "Block",
													"src": "9310:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 487,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "9331:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 486,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 489,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:2"
														}
													]
												},
												"id": 491,
												"nodeType": "IfStatement",
												"src": "8976:379:2",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "9003:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 475,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 475,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:2",
																	"valueSize": 1
																}
															],
															"id": 484,
															"nodeType": "InlineAssembly",
															"src": "9152:142:2"
														}
													]
												}
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8838:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8863:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:2"
									},
									"scope": 494,
									"src": "8821:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 495,
							"src": "194:9169:2",
							"usedErrors": []
						}
					],
					"src": "101:9263:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							516
						]
					},
					"id": 517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 516,
							"linearizedBaseContracts": [
								516
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 502,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 501,
												"id": 504,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 516,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 511,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 510,
												"id": 513,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 516,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 517,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"proxy/CellulaGameProxy.sol": {
				"ast": {
					"absolutePath": "proxy/CellulaGameProxy.sol",
					"exportedSymbols": {
						"Address": [
							494
						],
						"CellulaGameProxy": [
							621
						],
						"Context": [
							516
						],
						"Ownable": [
							112
						],
						"Proxy": [
							164
						],
						"ProxyOwnable": [
							737
						]
					},
					"id": 622,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "proxy/ProxyOwnable.sol",
							"file": "./ProxyOwnable.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 622,
							"sourceUnit": 738,
							"src": "58:28:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 622,
							"sourceUnit": 495,
							"src": "88:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "@openzeppelin/contracts/proxy/Proxy.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 622,
							"sourceUnit": 165,
							"src": "141:49:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 622,
							"sourceUnit": 113,
							"src": "192:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 524,
										"name": "Proxy",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 164,
										"src": "533:5:4"
									},
									"id": 525,
									"nodeType": "InheritanceSpecifier",
									"src": "533:5:4"
								},
								{
									"baseName": {
										"id": 526,
										"name": "ProxyOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 737,
										"src": "540:12:4"
									},
									"id": 527,
									"nodeType": "InheritanceSpecifier",
									"src": "540:12:4"
								}
							],
							"canonicalName": "CellulaGameProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 523,
								"nodeType": "StructuredDocumentation",
								"src": "246:258:4",
								"text": "@notice proxy contract of CellulaGame\n@dev upgrade limit：he new version of the contract can only add data on the basis of the previous version of the contract, \n                   and the order of declaration must be behind the original data.。"
							},
							"fullyImplemented": true,
							"id": 621,
							"linearizedBaseContracts": [
								621,
								737,
								516,
								164
							],
							"name": "CellulaGameProxy",
							"nameLocation": "513:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 530,
									"libraryName": {
										"id": 528,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "566:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "560:26:4",
									"typeName": {
										"id": 529,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "578:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "592:150:4",
										"text": "@dev The address location of the CellulaGame contract is adopted in this way so as not to be overwritten by the data in the proxy contract itself"
									},
									"id": 536,
									"mutability": "constant",
									"name": "_IMPLEMENT_ADDRESS_POSITION",
									"nameLocation": "772:27:4",
									"nodeType": "VariableDeclaration",
									"scope": 621,
									"src": "747:102:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 532,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "747:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "43656c6c756c612e47616d652e696d706c2e616464726573732e3834633263653437",
												"id": 534,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "812:36:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e1",
													"typeString": "literal_string \"Cellula.Game.impl.address.84c2ce47\""
												},
												"value": "Cellula.Game.impl.address.84c2ce47"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9a1f1e098310d583b5217269e373bf0137d9ebbd218ab5d04d9ff18a0c5c62e1",
													"typeString": "literal_string \"Cellula.Game.impl.address.84c2ce47\""
												}
											],
											"id": 533,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "802:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "802:47:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "856:44:4",
										"text": "@dev Where the Owner is actually stored"
									},
									"id": 542,
									"mutability": "constant",
									"name": "_OWNER_POSITION",
									"nameLocation": "930:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 621,
									"src": "905:89:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 538,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "905:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "43656c6c756c612e47616d652e50726f78792e6f776e65722e3765326566643635",
												"id": 540,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "958:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd",
													"typeString": "literal_string \"Cellula.Game.Proxy.owner.7e2efd65\""
												},
												"value": "Cellula.Game.Proxy.owner.7e2efd65"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3d5fef76c3ed66b0ef56fb540c5aae1f78bb9d0a3b938760982770c408c354cd",
													"typeString": "literal_string \"Cellula.Game.Proxy.owner.7e2efd65\""
												}
											],
											"id": 539,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "948:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 541,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "948:46:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "1155:213:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 551,
																	"name": "cellulaGame",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "1174:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "1174:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1174:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414444524553532053484f554c4420424520434f4e5452414354",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1200:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0b25863f39c36f45391571ed8d1a0ead5f653b102114859e004a80bff1b90",
																"typeString": "literal_string \"ADDRESS SHOULD BE CONTRACT\""
															},
															"value": "ADDRESS SHOULD BE CONTRACT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0b25863f39c36f45391571ed8d1a0ead5f653b102114859e004a80bff1b90",
																"typeString": "literal_string \"ADDRESS SHOULD BE CONTRACT\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1166:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1166:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "1166:63:4"
											},
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "1248:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "1240:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 557,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1240:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"id": 559,
													"name": "_IMPLEMENT_ADDRESS_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 536,
													"src": "1259:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1240:46:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1306:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "1328:8:4"
																	},
																	{
																		"name": "cellulaGame",
																		"nodeType": "YulIdentifier",
																		"src": "1338:11:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "1321:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1321:29:4"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 545,
														"isOffset": false,
														"isSlot": false,
														"src": "1338:11:4",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "1328:8:4",
														"valueSize": 1
													}
												],
												"id": 561,
												"nodeType": "InlineAssembly",
												"src": "1297:64:4"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1001:78:4",
										"text": "@dev Set the address of the implement contract , only called by the owner"
									},
									"functionSelector": "3d643cbe",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 547,
												"name": "onlyProxyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "1140:14:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1140:14:4"
										}
									],
									"name": "setImplementAddress",
									"nameLocation": "1093:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "cellulaGame",
												"nameLocation": "1121:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1113:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:21:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1155:0:4"
									},
									"scope": 621,
									"src": "1084:284:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "1493:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															591
														],
														"referencedDeclaration": 591,
														"src": "1511:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1511:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 568,
												"id": 571,
												"nodeType": "Return",
												"src": "1504:24:4"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "1374:53:4",
										"text": "@dev return the address of the implement contract"
									},
									"functionSelector": "10b2b981",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementAddress",
									"nameLocation": "1441:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:2:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1484:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:9:4"
									},
									"scope": 621,
									"src": "1432:104:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										129
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "1686:178:4",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "1705:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "1697:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 580,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1697:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"id": 582,
													"name": "_IMPLEMENT_ADDRESS_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 536,
													"src": "1716:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1697:46:4"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "impl",
														"nameLocation": "1762:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "1754:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 584,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1754:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"nodeType": "VariableDeclarationStatement",
												"src": "1754:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1786:49:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "1815:8:4"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:15:4"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nodeType": "YulIdentifier",
																	"src": "1801:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 585,
														"isOffset": false,
														"isSlot": false,
														"src": "1801:4:4",
														"valueSize": 1
													},
													{
														"declaration": 581,
														"isOffset": false,
														"isSlot": false,
														"src": "1815:8:4",
														"valueSize": 1
													}
												],
												"id": 587,
												"nodeType": "InlineAssembly",
												"src": "1777:58:4"
											},
											{
												"expression": {
													"id": 588,
													"name": "impl",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 585,
													"src": "1852:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 579,
												"id": 589,
												"nodeType": "Return",
												"src": "1845:11:4"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "1542:63:4",
										"text": "@dev override:return the address of the implement contract"
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1619:15:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 576,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1659:8:4"
									},
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:2:4"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "1677:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:9:4"
									},
									"scope": 621,
									"src": "1610:254:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										730
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "1931:122:4",
										"statements": [
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "1950:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 602,
														"src": "1942:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 597,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1942:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"initialValue": {
													"id": 599,
													"name": "_OWNER_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "1961:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1942:34:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1996:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2018:8:4"
																	},
																	{
																		"name": "_owner",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:24:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:24:4"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "2028:6:4",
														"valueSize": 1
													},
													{
														"declaration": 598,
														"isOffset": false,
														"isSlot": false,
														"src": "2018:8:4",
														"valueSize": 1
													}
												],
												"id": 601,
												"nodeType": "InlineAssembly",
												"src": "1987:59:4"
											}
										]
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_storeProxyOwner",
									"nameLocation": "1880:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 595,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1922:8:4"
									},
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1905:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1897:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:16:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:0:4"
									},
									"scope": 621,
									"src": "1871:182:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										736
									],
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "2128:172:4",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2147:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "2139:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 609,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2139:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"id": 611,
													"name": "_OWNER_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "2158:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2139:34:4"
											},
											{
												"assignments": [
													614
												],
												"declarations": [
													{
														"constant": false,
														"id": 614,
														"mutability": "mutable",
														"name": "_owner",
														"nameLocation": "2192:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 619,
														"src": "2184:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 613,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2184:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"nodeType": "VariableDeclarationStatement",
												"src": "2184:14:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2218:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2233:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "position",
																		"nodeType": "YulIdentifier",
																		"src": "2249:8:4"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2243:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2243:15:4"
															},
															"variableNames": [
																{
																	"name": "_owner",
																	"nodeType": "YulIdentifier",
																	"src": "2233:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 614,
														"isOffset": false,
														"isSlot": false,
														"src": "2233:6:4",
														"valueSize": 1
													},
													{
														"declaration": 610,
														"isOffset": false,
														"isSlot": false,
														"src": "2249:8:4",
														"valueSize": 1
													}
												],
												"id": 616,
												"nodeType": "InlineAssembly",
												"src": "2209:60:4"
											},
											{
												"expression": {
													"id": 617,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 614,
													"src": "2286:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 608,
												"id": 618,
												"nodeType": "Return",
												"src": "2279:13:4"
											}
										]
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_loadProxyOwner",
									"nameLocation": "2069:15:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 605,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2101:8:4"
									},
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:2:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:9:4"
									},
									"scope": 621,
									"src": "2060:240:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 622,
							"src": "504:1799:4",
							"usedErrors": []
						}
					],
					"src": "33:2270:4"
				},
				"id": 4
			},
			"proxy/ProxyOwnable.sol": {
				"ast": {
					"absolutePath": "proxy/ProxyOwnable.sol",
					"exportedSymbols": {
						"Context": [
							516
						],
						"ProxyOwnable": [
							737
						]
					},
					"id": 738,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 738,
							"sourceUnit": 517,
							"src": "0:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 625,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 516,
										"src": "225:7:5"
									},
									"id": 626,
									"nodeType": "InheritanceSpecifier",
									"src": "225:7:5"
								}
							],
							"canonicalName": "ProxyOwnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 624,
								"nodeType": "StructuredDocumentation",
								"src": "53:137:5",
								"text": "@dev The proxy contract uses the owner permission management library, and the function name is distinguished from the proxy contract"
							},
							"fullyImplemented": false,
							"id": 737,
							"linearizedBaseContracts": [
								737,
								516
							],
							"name": "ProxyOwnable",
							"nameLocation": "209:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 632,
									"name": "ProxyOwnershipTransferred",
									"nameLocation": "246:25:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "288:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "272:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "319:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "303:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:57:5"
									},
									"src": "240:89:5"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "446:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 637,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "481:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "481:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 636,
														"name": "_transferProxyOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "457:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "457:37:5"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "335:91:5",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 642,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:2:5"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:0:5"
									},
									"scope": 737,
									"src": "432:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "631:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 648,
														"name": "_loadProxyOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "649:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 647,
												"id": 650,
												"nodeType": "Return",
												"src": "642:24:5"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "508:65:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "025313a2",
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "proxyOwner",
									"nameLocation": "588:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:5"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:9:5"
									},
									"scope": 737,
									"src": "579:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "789:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 656,
																	"name": "proxyOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "808:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "808:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 658,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "824:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "824:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "808:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f78794f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "838:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04755ba483b415c0010c66c558ec738faa90aa49e561847a09d7d1641110674d",
																"typeString": "literal_string \"ProxyOwnable: caller is not the owner\""
															},
															"value": "ProxyOwnable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04755ba483b415c0010c66c558ec738faa90aa49e561847a09d7d1641110674d",
																"typeString": "literal_string \"ProxyOwnable: caller is not the owner\""
															}
														],
														"id": 655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "800:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "800:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "800:78:5"
											},
											{
												"id": 664,
												"nodeType": "PlaceholderStatement",
												"src": "889:1:5"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "680:77:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 666,
									"name": "onlyProxyOwner",
									"nameLocation": "772:14:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "786:2:5"
									},
									"src": "763:135:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1305:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1348:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1340:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 673,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1340:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1340:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 672,
														"name": "_transferProxyOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "1316:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1316:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "1316:35:5"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "904:331:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "afe13fbc",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 670,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 669,
												"name": "onlyProxyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "1290:14:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1290:14:5"
										}
									],
									"name": "renounceProxyOwnership",
									"nameLocation": "1250:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:2:5"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1305:0:5"
									},
									"scope": 737,
									"src": "1241:118:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "1589:138:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 689,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "1608:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1628:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1620:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 690,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1620:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1620:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1608:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1632:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1600:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1600:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "1600:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "1710:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_transferProxyOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "1686:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1686:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1686:33:5"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1365:138:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f1739cae",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 685,
												"name": "onlyProxyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 666,
												"src": "1574:14:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1574:14:5"
										}
									],
									"name": "transferProxyOwnership",
									"nameLocation": "1518:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1549:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1541:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:18:5"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1589:0:5"
									},
									"scope": 737,
									"src": "1509:218:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "1950:153:5",
										"statements": [
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1969:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "1961:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 709,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1961:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 713,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 711,
														"name": "_loadProxyOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "1980:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1961:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 715,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "2025:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 714,
														"name": "_storeProxyOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2008:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "2008:26:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 719,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "2076:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "2086:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 718,
														"name": "ProxyOwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "2050:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "EmitStatement",
												"src": "2045:50:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1733:143:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferProxyOwnership",
									"nameLocation": "1891:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1923:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1915:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1914:18:5"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:0:5"
									},
									"scope": 737,
									"src": "1882:221:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2105:21:5",
										"text": "@dev store owner"
									},
									"id": 730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_storeProxyOwner",
									"nameLocation": "2140:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2157:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:5"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2188:0:5"
									},
									"scope": 737,
									"src": "2131:58:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "2195:20:5",
										"text": "@dev read owner"
									},
									"id": 736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_loadProxyOwner",
									"nameLocation": "2229:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:2:5"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2278:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:9:5"
									},
									"scope": 737,
									"src": "2220:67:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 738,
							"src": "191:2099:5",
							"usedErrors": []
						}
					],
					"src": "0:2290:5"
				},
				"id": 5
			}
		}
	}
}